/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package algoritma_proje;
import java.util.Arrays;
import java.util.Random;
/**
 *
 * @author Nisa Efendioðlu
 */

public class Algoritma_Proje {
int[] arr = {0,1,34,35,91,92,93,94,95,96,97,98,36,54,55,37,38,39,51,52,53,56,57,58,40,41,42,43,44,45,46,47,48,49,50,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,2,3,4,5,6,23,24,25,26,27,28,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,29,30,31,32,33,85,86,87,88,89,90,99} ;
int[] nums = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99};
int[] sayilar = {99,98,97,96,95,94,93,92,91,90,89,88,87,86,85,84,83,82,81,80,79,78,77,76,75,74,73,72,71,70,69,68,67,66,65,64,63,62,61,60,59,58,57,56,55,54,53,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0};
   
  void quickSort(int[] a, int altindis, int üstindis) {
// altindis o adýmda sýralanan altdizinin ek küçük indisidir
// üstindis o adýmda sýralanan altdizinin ek büyük indisidir
int i = altindis, j = üstindis, h;
// x terimi, mukayesenin yapýlacaðý mihenk'dir (pivot)
int x = a[(altindis + üstindis) / 2];
// Takas eylemiyle diziyi ayrýþtýrma
do {
while (a[i] < x)
i++;
while (a[j] > x)
j--;
if (i <= j) {
h = a[i];
a[i] = a[j];
a[j] = h;
i++;
j--;
}
} while (i <= j);
// yinelge (recursion)
if (altindis < j)
quickSort(a, altindis, j);
if (i < üstindis)
quickSort(a, i, üstindis);
}
    /**
     * @param args the command line arguments
     */
  
  public static void QuickSort(){
      Algoritma_Proje qs = new Algoritma_Proje();
    System.out.println("\nQuickSort karisik sayilari Sýralamadan önce:"); //Karisik sayilar siralaniyor
    System.out.println(Arrays.toString(qs.arr));
    qs.quickSort(qs.arr, 0, 99);
    System.out.println("QuicSort Sýralamadan sonra:");
    System.out.println(Arrays.toString(qs.arr));
    
     System.out.println("QuickSort Sýrali dizi Sýralamadan önce:"); //sirali sayilar siralaniyor.
    System.out.println(Arrays.toString(qs.nums));
    qs.quickSort(qs.nums, 0, 99);
    System.out.println("QuicSort Sýralamadan sonra:");
    System.out.println(Arrays.toString(qs.nums));
    
    System.out.println("QuickSort ters siralananlari Sýralamadan önce:"); //ters siralanan sayilar siralaniyor.
    System.out.println(Arrays.toString(qs.sayilar));
    qs.quickSort(qs.sayilar, 0, 99);
    System.out.println("QuicSort Sýralamadan sonra:");
    System.out.println(Arrays.toString(qs.sayilar));
    
}
  
    public static void insertionSort(int arr[]) {
        int j=100;
    if(arr[j]<arr[j-1]){
    int gecici=arr[j];
    arr[j]=arr[j-1];
    arr[j-1]=gecici;

}
    }
    public static void sirali(){
        int[] nums = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99};
       Algoritma_Proje dz = new Algoritma_Proje();
dz.Sort(nums);
dz.print(nums);
}

private void Sort(int[] nums){
int temp = 0;
int lenght = nums.length;
for(int i = 1; i < lenght; i++) // 1den baþlayarak dizinin sonuna kadar devam et
{
if(nums[i] < nums[i-1]) // büyük ile küçüðü deðiþtir ve tekrar indis 1 e git.
{
temp = nums[i]; // dizide indisler arasý deðiþiklik olacaðýndan
nums[i] = nums[i-1]; // temp adýnda bir deðiþkene ihtiyaç duyarýz.
nums[i-1] = temp;
i = 1;
}
}
}
private void print(int[] nums)
{
System.out.print("Ýnsertion Sýrali dizi: \n");
for(int i = 0; i < nums.length; i++)
{
System.out.print(nums[i] +  " "  );
}
}
    
public static void terstenSirali(){
    int[] sayilar = {99,98,97,96,95,94,93,92,91,90,89,88,87,86,85,84,83,82,81,80,79,78,77,76,75,74,73,72,71,70,69,68,67,66,65,64,63,62,61,60,59,58,57,56,55,54,53,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0};
Algoritma_Proje aa = new Algoritma_Proje();
aa.sirala(sayilar);
aa.ters(sayilar);
}

private void sirala(int[] sayilar){
int temp = 0;
int lenght = sayilar.length;
for(int i =1; i < lenght; i++) // 1den baþlayarak dizinin sonuna kadar devam et
{
if(sayilar[i] < sayilar[i-1]) // büyük ile küçüðü deðiþtir ve tekrar indis 1 e git.
{
temp = sayilar[i]; // dizide indisler arasý deðiþiklik olacaðýndan
sayilar[i] = sayilar[i-1]; // temp adýnda bir deðiþkene ihtiyaç duyarýz.
sayilar[i-1] = temp;
i = 1;
}
}
}
private void ters(int[] sayilar)
{
System.out.print("\n Ýnsertion tersten sýrali dizi sýralanmýs hali: \n");
for(int i = 0; i < sayilar.length; i++)
{
System.out.print(sayilar[i] +  " ");
}
}
public static void siralibuble(){
 Algoritma_Proje bbs = new Algoritma_Proje();
 System.out.println("\n Bubble sýralamadan önce:");
 System.out.println(Arrays.toString(bbs.arr));
 Arrays.sort(bbs.arr);
 System.out.println("Bubble sýralamadan sonra:");
 System.out.println(Arrays.toString(bbs.arr));
 
  int []dizi2 =new int[100] ;
    for(int j=0;j<dizi2.length;j++){
    Random random= new Random();

        dizi2[j]=(int) (Math.random()*100);

    }
    
   
    System.out.print("Bubble Random hali:\n");
    for(int i=0;i<dizi2.length;i++){
    System.out.print(dizi2[i]+" ");
  
}
   }


   private static void randominsertion(){
       int []dizi =new int[100] ;
    for(int j=0;j<dizi.length;j++){
    Random random= new Random();

        dizi[j]=(int) (Math.random()*100);

    }
    
    System.out.print("\n Ýnsertion Random dizinin sýralanmamýþ hali: ");
    for(int a=0;a<dizi.length;a++){
    System.out.print(dizi[a]+" ");
    }

    insertionSort(dizi);
    System.out.print("\n Ýnsertion Random dizinin sýralanmýþ hali: ");
    for(int i=0;i<dizi.length;i++){
    System.out.print(dizi[i]+" ");
  
}
   }
    void selectionSort(int [] dizi)
 {
 int yedek;
 int minIndex;
 for(int i=0; i< dizi.length; i++)
 {
 minIndex=i;
 for(int j=i; j<dizi.length; j++)
 {
 if (dizi[j] < dizi[minIndex]) minIndex=j;
 }
 yedek=dizi[i];
 dizi[i]=dizi[minIndex];
 dizi[minIndex]=yedek;
 }
 }
void diziYaz(int[] arr){
 for(int i=0; i < arr.length;i++){
 System.out.print(arr[i] + " ");
 }
 }


    public static void main(String[] args) {
             
             //randominsertion(); //Ýnsertion sýralamasýnýn random halini ekrana verir.
             sirali(); //Ýnsertion sýralamasýnýn sirali halini ekrana verir.
             terstenSirali(); //Ýnsertion sýralamasýnýn tersten siralanmis  halini tekrar siralayarak ekrana verir.
             siralibuble(); //Bubble sýralamasýnýn random ve sirali halini ekrana verir.
             QuickSort();
             
    Algoritma_Proje ss = new Algoritma_Proje();
 System.out.println("SelectionSort Sýralamadan önce:");
 ss.diziYaz(ss.arr);
 ss.selectionSort(ss.arr);
 System.out.println("\n SelectionSort Sýralamadan sonra:");
 ss.diziYaz(ss.arr);
        // TODO code application logic here
    }
    
}
